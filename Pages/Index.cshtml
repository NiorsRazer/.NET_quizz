@page
@model quizz.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}
<div class="container">
    <form method="post" class="mt-4">
        <div id="questionnaire">
            @if (Model.questionnaire != null)
            {
                for (int i = 0; i < Model.questionnaire.ListQuestion.Count; i++)
                {
                    <div class="card mb-3 question-card" id="question-card-@i" style="display: @(i == 0 ? "block" : "none")">
                        <div class="card-body">
                            <h5 class="card-title">@Model.questionnaire.ListQuestion[i].Text</h5>
                            <div class="form-group">
                                @foreach (var answer in Model.questionnaire.ListQuestion[i].ListAnswers)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="q_@Model.questionnaire.ListQuestion[i].Id" value="@answer.Id" id="answer_@answer.Id" />
                                        <label class="form-check-label" for="answer_@answer.Id">
                                            @answer.Text
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="d-flex justify-content-between mt-3">
            <button type="button" class="btn btn-secondary" id="prev-btn" onclick="showPreviousQuestion()" disabled>Previous</button>
            <button type="button" class="btn btn-secondary" id="next-btn" onclick="showNextQuestion()">Next</button>
        </div>
        <div class="mt-3">
            <button type="submit" class="btn btn-primary" id="submit-btn" style="display: none;">Submit</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        let currentQuestionIndex = 0;
        const totalQuestions = @Model.questionnaire.ListQuestion.Count;

        function showQuestion(index) {
            document.querySelector(`#question-card-${currentQuestionIndex}`).style.display = 'none';
            document.querySelector(`#question-card-${index}`).style.display = 'block';
            currentQuestionIndex = index;
            updateButtons();
        }

        function showNextQuestion() {
            if (currentQuestionIndex < totalQuestions - 1) {
                showQuestion(currentQuestionIndex + 1);
            }
        }

        function showPreviousQuestion() {
            if (currentQuestionIndex > 0) {
                showQuestion(currentQuestionIndex - 1);
            }
        }

        function updateButtons() {
            document.getElementById('prev-btn').disabled = currentQuestionIndex === 0;
            document.getElementById('next-btn').style.display = currentQuestionIndex === totalQuestions - 1 ? 'none' : 'inline-block';
            document.getElementById('submit-btn').style.display = currentQuestionIndex === totalQuestions - 1 ? 'inline-block' : 'none';
        }
    </script>
}
